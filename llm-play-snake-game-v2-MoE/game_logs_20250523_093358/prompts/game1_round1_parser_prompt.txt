You are the secondary LLM in a Mixture-of-Experts system for a Snake game. Your job is to format the primary LLM's output into valid JSON.

Generate a valid JSON object from this Snake game primary LLM response (let's call it RESPONSE_1):

BEGINNING OF RESPONSE_1:

```
I'll help you plan a safe path for the snake to reach the apple at (7,6) from its current position at (5,5). Let's analyze the situation:

### Current State:
- Head position: (5, 5)
- Current direction: NONE (any move is allowed)
- Body cells: [] (no body yet)
- Apple position: (7, 6)

### Objective:
We need to get from (5,5) to (7,6). This requires:
1. Moving 2 units right (to match x-coordinate: 5 → 7)
2. Moving 1 unit up (to match y-coordinate: 5 → 6)

Since the snake can start in any direction and there are no body collisions to worry about yet, we'll prioritize a direct path.

### Path Planning:
A direct approach would be:
- RIGHT, RIGHT, UP

This sequence will take us directly from (5,5) to (7,6) without any detours or risks of collision since the snake's body is empty.

Let's put this into JSON format:

```json
{
  "moves": ["RIGHT", "RIGHT", "UP"],
  "reasoning": "Direct path with no collisions or reversals needed."
}
```

### Final Check:
- Number of RIGHT moves - LEFT moves = 2 (7 - 5)
- Number of UP moves - DOWN moves = 1 (6 - 5)

Everything matches the constraints. So here is our final JSON output:

```json
{
  "moves": ["RIGHT", "RIGHT", "UP"],
  "reasoning": "Direct path with no collisions or reversals needed."
}
```
```

END OF RESPONSE_1.

## WHAT RESPONSE_1 LOOKS LIKE:
RESPONSE_1 might look like this:
  <think> THINK_PROCESS_TEXT_OF_RESPONSE_1 </think>
  FINAL_OUTPUT_TEXT_OF_RESPONSE_1

## OUTPUT FORMAT REQUIREMENTS OF YOUR ANSWER:
{
  "moves": ["MOVE1", "MOVE2", ...],
  "reasoning": "brief explanation"
}


## COORDINATE SYSTEM TO HELP YOU UNDERSTAND RESPONSE_1:
- UP = y + 1
- DOWN = y - 1
- RIGHT = x + 1
- LEFT = x - 1

Example Moves from (1,1):
  • UP → (1,2)
  • DOWN → (1,0)
  • RIGHT → (2,1)
  • LEFT → (0,1)

## THE MAIN OBJECTIVE OF RESPONSE_1 SO THAT YOU CAN UNDERSTAND BETTER RESPONSE_1:

The main objective of RESPONSE_1 is to generate a list of moves that leads the snake, whose head is now at (5, 5) and whose body cells are in list format [], to eat the apple at (7, 6).

## RULES:
- "moves" must be a list of directions from: "UP", "DOWN", "LEFT", "RIGHT"
- "reasoning" must be a brief explanation for the chosen path
- If after reading RESPONSE_1, according to your understanding, no valid path exists or can't be determined, or if you are not sure about the text's meaning of path planning, use: { "moves": [], "reasoning": "NO_PATH_FOUND" } or { "moves": [], "reasoning": "I_CANNOT_UNDERSTAND_THE_TEXT" }

## WHAT YOU SHOULD DO:
- First, if RESPONSE_1 contains the word "ERROR" (capitalized), you should return { "moves": [], "reasoning": "ERROR" }.
- Second, if RESPONSE_1 contains the <think>...</think> tags, you should ignore THINK_PROCESS_TEXT_OF_RESPONSE_1 and rely solely on FINAL_OUTPUT_TEXT_OF_RESPONSE_1 to figure out your answer in JSON format.
- Third, if RESPONSE_1 does not contain the <think>...</think> tags, you should use use the whole text of RESPONSE_1 to figure out your answer in JSON format. Texts at the beginning of RESPONSE_1 are much less important than the texts torwards the end.

Return ONLY the JSON object without any additional text.
